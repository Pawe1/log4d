<?xml version="1.0" encoding="UTF-8" ?>

<!-- Author: Keith Wood. -->

<!-- A configuration element consists of optional renderer elements,
     appender elements, categories, and an optional root element. -->

<!ELEMENT log4d:configuration (renderer*, appender*, category*, root?)>


<!-- The categoryFactory attribute names the factory to be used to
     create new instances of categories.

     Setting the debug attribute enable the printing
     of internal log4d logging statements.
     By default, the debug attribute is "null", meaning
     that we not touch internal log4d logging settings.

     The disable attribute takes a priority value such that all logging
     statements with a priority equal or below this value are disabled.

     The disableOverride attribute allows the user to override any
     BasicConfigurator.disable invocations made from within the application.

     By default, disableOverride is "null", meaning that we
     do not touch the disable flag. -->

<!ATTLIST log4d:configuration
  categoryFactory CDATA #IMPLIED
  debug           (true | false | null) "null"
  disable         CDATA "null"
  disableOverride (true | false | null) "null"
>

<!-- Renderer elements allow the user to customize the conversion of
     message objects to strings. -->

<!ELEMENT renderer EMPTY>
<!ATTLIST renderer
  renderedClass  CDATA #REQUIRED
  renderingClass CDATA #REQUIRED
>

<!-- Appenders must have a name and a class. Appenders may contain
     an error handler, parameters, a layout, and filters. -->

<!ELEMENT appender (errorHandler?, param*, layout?, filter*)>
<!ATTLIST appender
  name  ID    #REQUIRED
  class CDATA #REQUIRED
>

<!-- ErrorHandlers can be of any class.
     They can admit any number of parameters. -->

<!ELEMENT errorHandler (param*)>
<!ATTLIST errorHandler
  class CDATA #REQUIRED
>

<!-- Layouts can be of any class.
     They can admit any number of parameters. -->

<!ELEMENT layout (param*)>
<!ATTLIST layout
  class CDATA #REQUIRED
>

<!-- Filters can be of any class.
     They can admit any number of parameters. -->

<!ELEMENT filter (param*)>
<!ATTLIST filter
  class CDATA #REQUIRED
>

<!-- Parameters have a name and a value. -->

<!ELEMENT param EMPTY>
<!ATTLIST param
  name  CDATA #REQUIRED
  value CDATA #REQUIRED
>

<!-- Priorities are identified by name. -->

<!ELEMENT priority EMPTY>
<!ATTLIST priority
  name CDATA #REQUIRED
>

<!-- If no priority element is specified, then the configurator
     MUST not touch the priority of the named category. -->

<!ELEMENT category (param*, priority?, appender-ref*)>
<!ATTLIST category
  class    CDATA #IMPLIED
  name     CDATA #REQUIRED
  additive (true | false) "true"
>

<!-- If no priority element is specified, then the configurator
     MUST not touch the priority of root.
     The root category always exists and cannot be subclassed. -->

<!ELEMENT root (param*, priority?, appender-ref*)>

<!-- Refer back to the appender defined earlier. -->

<!ELEMENT appender-ref EMPTY>
<!ATTLIST appender-ref
  ref IDREF #REQUIRED
>

<!-- ==================================================================== -->
<!-- The following definitions are for use
     in formatting logging events as XML. -->

<!ELEMENT log4d:eventSet (log4d:event*)>

<!ELEMENT log4d:event (log4d:message, log4d:NDC?, log4d:exception?) >

<!-- The timestamp format is application dependent. -->

<!ATTLIST log4d:event
  category  CDATA #REQUIRED
  priority  CDATA #REQUIRED
  thread    CDATA #REQUIRED
  timestamp CDATA #REQUIRED
>

<!ELEMENT log4d:message (#PCDATA)>

<!ELEMENT log4d:NDC (#PCDATA)>

<!ELEMENT log4d:exception (#PCDATA)>

